// Generated by purs version 0.13.5
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Egg_Data_PlayerTypes = require("../Egg.Data.PlayerTypes/index.js");
var Egg_Logic_Collisions = require("../Egg.Logic.Collisions/index.js");
var Egg_Types_Coord = require("../Egg.Types.Coord/index.js");
var Egg_Types_CurrentFrame = require("../Egg.Types.CurrentFrame/index.js");
var Egg_Types_LastAction = require("../Egg.Types.LastAction/index.js");
var Egg_Types_Player = require("../Egg.Types.Player/index.js");
var Egg_Types_PlayerType = require("../Egg.Types.PlayerType/index.js");
var Egg_Types_ResourceUrl = require("../Egg.Types.ResourceUrl/index.js");
var Test_Spec = require("../Test.Spec/index.js");
var Test_Spec_Assertions = require("../Test.Spec.Assertions/index.js");
var createTestPlayer = function (i) {
    return function (coord) {
        return function (kind) {
            return {
                coords: coord,
                direction: Egg_Types_Player.defaultPlayer.direction,
                oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                id: i,
                falling: Egg_Types_Player.defaultPlayer.falling,
                stop: Egg_Types_Player.defaultPlayer.stop,
                lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                moved: Egg_Types_Player.defaultPlayer.moved,
                playerType: Egg_Data_PlayerTypes.getPlayerType(kind)
            };
        };
    };
};
var tests = Test_Spec.describe(Data_Identity.monadIdentity)("Collisions")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.describe(Data_Identity.monadIdentity)("checkAllCollisions")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("List of one players returns list")(Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "coords";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "currentFrame";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "direction";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "falling";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "id";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "lastAction";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "moved";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "oldDirection";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "playerType";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "stop";
}))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "fallSpeed";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "flying";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "frames";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "img";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "movePattern";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "moveSpeed";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "multiplier";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "title";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "type_";
}))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord))))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
    return "stop";
}))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
    return "playerType";
}))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
    return "type_";
}))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
    return "title";
}))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
    return "multiplier";
}))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
    return "moveSpeed";
}))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
    return "movePattern";
}))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
    return "img";
}))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
    return "frames";
}))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
    return "flying";
}))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
    return "fallSpeed";
}))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
    return "oldDirection";
}))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
    return "moved";
}))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
    return "lastAction";
}))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
    return "id";
}))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
    return "falling";
}))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
    return "direction";
}))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
    return "currentFrame";
}))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
    return "coords";
}))(Egg_Types_Coord.eqCoord))))(Egg_Logic_Collisions.checkAllCollisions([ Egg_Types_Player.defaultPlayer ]))([ Egg_Types_Player.defaultPlayer ])))(function () {
    return Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Combines two players, leaves one")((function () {
        var firstPlayer = createTestPlayer(1)(Egg_Types_Coord.createCoord(1)(1))(Egg_Types_PlayerType.Egg.value);
        var secondPlayer = createTestPlayer(2)(Egg_Types_Coord.createCoord(20)(20))(Egg_Types_PlayerType.RedEgg.value);
        var thirdPlayer = createTestPlayer(3)(Egg_Types_Coord.createCoord(20)(20))(Egg_Types_PlayerType.RedEgg.value);
        var combined = {
            playerType: Egg_Data_PlayerTypes.getPlayerType(Egg_Types_PlayerType.YellowEgg.value),
            coords: secondPlayer.coords,
            currentFrame: secondPlayer.currentFrame,
            direction: secondPlayer.direction,
            falling: secondPlayer.falling,
            id: secondPlayer.id,
            lastAction: secondPlayer.lastAction,
            moved: secondPlayer.moved,
            oldDirection: secondPlayer.oldDirection,
            stop: secondPlayer.stop
        };
        return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "coords";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "currentFrame";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "direction";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "falling";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "id";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "lastAction";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "moved";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "oldDirection";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "playerType";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "stop";
        }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "fallSpeed";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "flying";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "frames";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "img";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "movePattern";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "moveSpeed";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "multiplier";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "title";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "type_";
        }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord))))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
            return "stop";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "playerType";
        }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
            return "type_";
        }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
            return "title";
        }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
            return "multiplier";
        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
            return "moveSpeed";
        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
            return "movePattern";
        }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
            return "img";
        }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
            return "frames";
        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
            return "flying";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "fallSpeed";
        }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
            return "oldDirection";
        }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
            return "moved";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "lastAction";
        }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
            return "id";
        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
            return "falling";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "direction";
        }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
            return "currentFrame";
        }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
            return "coords";
        }))(Egg_Types_Coord.eqCoord))))(Egg_Logic_Collisions.checkAllCollisions([ firstPlayer, secondPlayer, thirdPlayer ]))([ firstPlayer, combined ]);
    })());
})))(function () {
    return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.describe(Data_Identity.monadIdentity)("uniquePairs")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("No pairs with one item")(Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "coords";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "currentFrame";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "direction";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "falling";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "id";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "lastAction";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "moved";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "oldDirection";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "playerType";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "stop";
    }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "fallSpeed";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "flying";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "frames";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "img";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "movePattern";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "moveSpeed";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "multiplier";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "title";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "type_";
    }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord)))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "coords";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "currentFrame";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "direction";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "falling";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "id";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "lastAction";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "moved";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "oldDirection";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "playerType";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "stop";
    }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "fallSpeed";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "flying";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "frames";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "img";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "movePattern";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "moveSpeed";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "multiplier";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "title";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "type_";
    }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord)))))(Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
        return "stop";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "playerType";
    }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
        return "type_";
    }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
        return "title";
    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
        return "multiplier";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "moveSpeed";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "movePattern";
    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
        return "img";
    }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
        return "frames";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "flying";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "fallSpeed";
    }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
        return "oldDirection";
    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
        return "moved";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "lastAction";
    }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
        return "id";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "falling";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "direction";
    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
        return "currentFrame";
    }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
        return "coords";
    }))(Egg_Types_Coord.eqCoord)))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
        return "stop";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "playerType";
    }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
        return "type_";
    }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
        return "title";
    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
        return "multiplier";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "moveSpeed";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "movePattern";
    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
        return "img";
    }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
        return "frames";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "flying";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "fallSpeed";
    }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
        return "oldDirection";
    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
        return "moved";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "lastAction";
    }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
        return "id";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "falling";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "direction";
    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
        return "currentFrame";
    }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
        return "coords";
    }))(Egg_Types_Coord.eqCoord)))))(Egg_Logic_Collisions.uniquePairs(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
        return "stop";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "playerType";
    }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
        return "type_";
    }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
        return "title";
    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
        return "multiplier";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "moveSpeed";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "movePattern";
    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
        return "img";
    }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
        return "frames";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "flying";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "fallSpeed";
    }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
        return "oldDirection";
    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
        return "moved";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "lastAction";
    }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
        return "id";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "falling";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "direction";
    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
        return "currentFrame";
    }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
        return "coords";
    }))(Egg_Types_Coord.eqCoord)))([ Egg_Types_Player.defaultPlayer ]))([  ])))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("One unique pair with two items")((function () {
            var otherPlayer = {
                id: 100,
                coords: Egg_Types_Player.defaultPlayer.coords,
                currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                direction: Egg_Types_Player.defaultPlayer.direction,
                falling: Egg_Types_Player.defaultPlayer.falling,
                lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                moved: Egg_Types_Player.defaultPlayer.moved,
                oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                playerType: Egg_Types_Player.defaultPlayer.playerType,
                stop: Egg_Types_Player.defaultPlayer.stop
            };
            return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "coords";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "currentFrame";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "direction";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "falling";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "lastAction";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "moved";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "oldDirection";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "playerType";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "stop";
            }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "fallSpeed";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "flying";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "frames";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "movePattern";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "moveSpeed";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "multiplier";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "type_";
            }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord)))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "coords";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "currentFrame";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "direction";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "falling";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "lastAction";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "moved";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "oldDirection";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "playerType";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "stop";
            }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "fallSpeed";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "flying";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "frames";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "movePattern";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "moveSpeed";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "multiplier";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "type_";
            }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord)))))(Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "stop";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "playerType";
            }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "type_";
            }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "multiplier";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "moveSpeed";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "movePattern";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                return "frames";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "flying";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "fallSpeed";
            }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                return "oldDirection";
            }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                return "moved";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "lastAction";
            }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "falling";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "direction";
            }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                return "currentFrame";
            }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                return "coords";
            }))(Egg_Types_Coord.eqCoord)))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "stop";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "playerType";
            }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "type_";
            }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "multiplier";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "moveSpeed";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "movePattern";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                return "frames";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "flying";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "fallSpeed";
            }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                return "oldDirection";
            }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                return "moved";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "lastAction";
            }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "falling";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "direction";
            }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                return "currentFrame";
            }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                return "coords";
            }))(Egg_Types_Coord.eqCoord)))))(Egg_Logic_Collisions.uniquePairs(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "stop";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "playerType";
            }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "type_";
            }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "multiplier";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "moveSpeed";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "movePattern";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                return "frames";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "flying";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "fallSpeed";
            }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                return "oldDirection";
            }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                return "moved";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "lastAction";
            }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "falling";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "direction";
            }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                return "currentFrame";
            }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                return "coords";
            }))(Egg_Types_Coord.eqCoord)))([ Egg_Types_Player.defaultPlayer, otherPlayer ]))([ new Data_Tuple.Tuple(Egg_Types_Player.defaultPlayer, otherPlayer) ]);
        })()))(function () {
            return Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Three unique pairs with three items")((function () {
                var otherPlayer = {
                    id: 100,
                    coords: Egg_Types_Player.defaultPlayer.coords,
                    currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                    direction: Egg_Types_Player.defaultPlayer.direction,
                    falling: Egg_Types_Player.defaultPlayer.falling,
                    lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                    moved: Egg_Types_Player.defaultPlayer.moved,
                    oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                    playerType: Egg_Types_Player.defaultPlayer.playerType,
                    stop: Egg_Types_Player.defaultPlayer.stop
                };
                var anotherPlayer = {
                    id: 101,
                    coords: Egg_Types_Player.defaultPlayer.coords,
                    currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                    direction: Egg_Types_Player.defaultPlayer.direction,
                    falling: Egg_Types_Player.defaultPlayer.falling,
                    lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                    moved: Egg_Types_Player.defaultPlayer.moved,
                    oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                    playerType: Egg_Types_Player.defaultPlayer.playerType,
                    stop: Egg_Types_Player.defaultPlayer.stop
                };
                return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "coords";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "currentFrame";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "direction";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "falling";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "lastAction";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "moved";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "oldDirection";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "playerType";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "stop";
                }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "fallSpeed";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "flying";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "frames";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "img";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "movePattern";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "moveSpeed";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "multiplier";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "title";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "type_";
                }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord)))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "coords";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "currentFrame";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "direction";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "falling";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "lastAction";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "moved";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "oldDirection";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "playerType";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "stop";
                }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "fallSpeed";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "flying";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "frames";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "img";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "movePattern";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "moveSpeed";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "multiplier";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "title";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "type_";
                }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord)))))(Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                    return "stop";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "playerType";
                }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                    return "type_";
                }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                    return "title";
                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                    return "multiplier";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "moveSpeed";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "movePattern";
                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                    return "img";
                }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                    return "frames";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "flying";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "fallSpeed";
                }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                    return "oldDirection";
                }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                    return "moved";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "lastAction";
                }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "falling";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "direction";
                }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                    return "currentFrame";
                }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                    return "coords";
                }))(Egg_Types_Coord.eqCoord)))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                    return "stop";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "playerType";
                }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                    return "type_";
                }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                    return "title";
                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                    return "multiplier";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "moveSpeed";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "movePattern";
                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                    return "img";
                }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                    return "frames";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "flying";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "fallSpeed";
                }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                    return "oldDirection";
                }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                    return "moved";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "lastAction";
                }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "falling";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "direction";
                }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                    return "currentFrame";
                }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                    return "coords";
                }))(Egg_Types_Coord.eqCoord)))))(Egg_Logic_Collisions.uniquePairs(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                    return "stop";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "playerType";
                }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                    return "type_";
                }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                    return "title";
                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                    return "multiplier";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "moveSpeed";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "movePattern";
                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                    return "img";
                }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                    return "frames";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "flying";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "fallSpeed";
                }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                    return "oldDirection";
                }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                    return "moved";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "lastAction";
                }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "falling";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "direction";
                }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                    return "currentFrame";
                }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                    return "coords";
                }))(Egg_Types_Coord.eqCoord)))([ Egg_Types_Player.defaultPlayer, otherPlayer, anotherPlayer ]))([ new Data_Tuple.Tuple(Egg_Types_Player.defaultPlayer, otherPlayer), new Data_Tuple.Tuple(Egg_Types_Player.defaultPlayer, anotherPlayer), new Data_Tuple.Tuple(otherPlayer, anotherPlayer) ]);
            })());
        });
    })))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.describe(Data_Identity.monadIdentity)("checkCollision")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Ignores same player collision")(Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showBoolean)(Data_Eq.eqBoolean)(Egg_Logic_Collisions.checkCollision(Egg_Types_Player.defaultPlayer)(Egg_Types_Player.defaultPlayer))(false)))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Identifies two players in the same tile")((function () {
                var otherPlayer = {
                    id: 100,
                    coords: Egg_Types_Player.defaultPlayer.coords,
                    currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                    direction: Egg_Types_Player.defaultPlayer.direction,
                    falling: Egg_Types_Player.defaultPlayer.falling,
                    lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                    moved: Egg_Types_Player.defaultPlayer.moved,
                    oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                    playerType: Egg_Types_Player.defaultPlayer.playerType,
                    stop: Egg_Types_Player.defaultPlayer.stop
                };
                return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showBoolean)(Data_Eq.eqBoolean)(Egg_Logic_Collisions.checkCollision(Egg_Types_Player.defaultPlayer)(otherPlayer))(true);
            })()))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Identifies two players are too far apart")((function () {
                    var firstPlayer = createTestPlayer(1)(Egg_Types_Coord.createFullCoord(5)(5)(1)(0))(Egg_Types_PlayerType.Egg.value);
                    var secondPlayer = {
                        id: 2,
                        coords: Egg_Types_Coord.createFullCoord(6)(5)(-30 | 0)(0),
                        currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                        direction: Egg_Types_Player.defaultPlayer.direction,
                        falling: Egg_Types_Player.defaultPlayer.falling,
                        lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                        moved: Egg_Types_Player.defaultPlayer.moved,
                        oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                        playerType: Egg_Types_Player.defaultPlayer.playerType,
                        stop: Egg_Types_Player.defaultPlayer.stop
                    };
                    return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showBoolean)(Data_Eq.eqBoolean)(Egg_Logic_Collisions.checkCollision(firstPlayer)(secondPlayer))(false);
                })()))(function () {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Close enough to collide on RHS")((function () {
                        var firstPlayer = {
                            id: 1,
                            coords: Egg_Types_Coord.createFullCoord(5)(5)(20)(0),
                            currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                            direction: Egg_Types_Player.defaultPlayer.direction,
                            falling: Egg_Types_Player.defaultPlayer.falling,
                            lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                            moved: Egg_Types_Player.defaultPlayer.moved,
                            oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                            playerType: Egg_Types_Player.defaultPlayer.playerType,
                            stop: Egg_Types_Player.defaultPlayer.stop
                        };
                        var secondPlayer = {
                            id: 2,
                            coords: Egg_Types_Coord.createFullCoord(6)(5)(-20 | 0)(0),
                            currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                            direction: Egg_Types_Player.defaultPlayer.direction,
                            falling: Egg_Types_Player.defaultPlayer.falling,
                            lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                            moved: Egg_Types_Player.defaultPlayer.moved,
                            oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                            playerType: Egg_Types_Player.defaultPlayer.playerType,
                            stop: Egg_Types_Player.defaultPlayer.stop
                        };
                        return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showBoolean)(Data_Eq.eqBoolean)(Egg_Logic_Collisions.checkCollision(firstPlayer)(secondPlayer))(true);
                    })()))(function () {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Close enough to collide on LHS")((function () {
                            var firstPlayer = {
                                id: 1,
                                coords: Egg_Types_Coord.createFullCoord(6)(5)(-40 | 0)(0),
                                currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                                direction: Egg_Types_Player.defaultPlayer.direction,
                                falling: Egg_Types_Player.defaultPlayer.falling,
                                lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                                moved: Egg_Types_Player.defaultPlayer.moved,
                                oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                                playerType: Egg_Types_Player.defaultPlayer.playerType,
                                stop: Egg_Types_Player.defaultPlayer.stop
                            };
                            var secondPlayer = {
                                id: 2,
                                coords: Egg_Types_Coord.createFullCoord(5)(5)(0)(0),
                                currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                                direction: Egg_Types_Player.defaultPlayer.direction,
                                falling: Egg_Types_Player.defaultPlayer.falling,
                                lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                                moved: Egg_Types_Player.defaultPlayer.moved,
                                oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                                playerType: Egg_Types_Player.defaultPlayer.playerType,
                                stop: Egg_Types_Player.defaultPlayer.stop
                            };
                            return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showBoolean)(Data_Eq.eqBoolean)(Egg_Logic_Collisions.checkCollision(firstPlayer)(secondPlayer))(true);
                        })()))(function () {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Ignores collision with Silver Egg")((function () {
                                var otherPlayer = {
                                    playerType: {
                                        type_: Egg_Types_PlayerType.SilverEgg.value,
                                        fallSpeed: Egg_Types_PlayerType.defaultPlayerType.fallSpeed,
                                        flying: Egg_Types_PlayerType.defaultPlayerType.flying,
                                        frames: Egg_Types_PlayerType.defaultPlayerType.frames,
                                        img: Egg_Types_PlayerType.defaultPlayerType.img,
                                        movePattern: Egg_Types_PlayerType.defaultPlayerType.movePattern,
                                        moveSpeed: Egg_Types_PlayerType.defaultPlayerType.moveSpeed,
                                        multiplier: Egg_Types_PlayerType.defaultPlayerType.multiplier,
                                        title: Egg_Types_PlayerType.defaultPlayerType.title
                                    },
                                    coords: Egg_Types_Player.defaultPlayer.coords,
                                    currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                                    direction: Egg_Types_Player.defaultPlayer.direction,
                                    falling: Egg_Types_Player.defaultPlayer.falling,
                                    id: Egg_Types_Player.defaultPlayer.id,
                                    lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                                    moved: Egg_Types_Player.defaultPlayer.moved,
                                    oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                                    stop: Egg_Types_Player.defaultPlayer.stop
                                };
                                return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showBoolean)(Data_Eq.eqBoolean)(Egg_Logic_Collisions.checkCollision(Egg_Types_Player.defaultPlayer)(otherPlayer))(false);
                            })()))(function () {
                                return Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Ignores collision with just split player")((function () {
                                    var otherPlayer = {
                                        lastAction: new Data_Maybe.Just(Egg_Types_LastAction.Split.value),
                                        coords: Egg_Types_Player.defaultPlayer.coords,
                                        currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                                        direction: Egg_Types_Player.defaultPlayer.direction,
                                        falling: Egg_Types_Player.defaultPlayer.falling,
                                        id: Egg_Types_Player.defaultPlayer.id,
                                        moved: Egg_Types_Player.defaultPlayer.moved,
                                        oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                                        playerType: Egg_Types_Player.defaultPlayer.playerType,
                                        stop: Egg_Types_Player.defaultPlayer.stop
                                    };
                                    return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showBoolean)(Data_Eq.eqBoolean)(Egg_Logic_Collisions.checkCollision(Egg_Types_Player.defaultPlayer)(otherPlayer))(false);
                                })());
                            });
                        });
                    });
                });
            });
        })))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.describe(Data_Identity.monadIdentity)("removeCollided")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Removes none if no players")(Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "coords";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "currentFrame";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "direction";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "falling";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "lastAction";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "moved";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "oldDirection";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "playerType";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "stop";
            }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "fallSpeed";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "flying";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "frames";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "movePattern";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "moveSpeed";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "multiplier";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "type_";
            }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord))))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "stop";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "playerType";
            }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "type_";
            }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "multiplier";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "moveSpeed";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "movePattern";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                return "frames";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "flying";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "fallSpeed";
            }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                return "oldDirection";
            }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                return "moved";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "lastAction";
            }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "falling";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "direction";
            }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                return "currentFrame";
            }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                return "coords";
            }))(Egg_Types_Coord.eqCoord))))(Egg_Logic_Collisions.removeCollided([  ])([  ]))([  ])))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Removes none if no collisions")((function () {
                    var firstPlayer = {
                        id: 1,
                        coords: Egg_Types_Coord.createFullCoord(6)(5)(-40 | 0)(0),
                        currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                        direction: Egg_Types_Player.defaultPlayer.direction,
                        falling: Egg_Types_Player.defaultPlayer.falling,
                        lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                        moved: Egg_Types_Player.defaultPlayer.moved,
                        oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                        playerType: Egg_Types_Player.defaultPlayer.playerType,
                        stop: Egg_Types_Player.defaultPlayer.stop
                    };
                    var secondPlayer = {
                        id: 2,
                        coords: Egg_Types_Coord.createFullCoord(5)(5)(0)(0),
                        currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                        direction: Egg_Types_Player.defaultPlayer.direction,
                        falling: Egg_Types_Player.defaultPlayer.falling,
                        lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                        moved: Egg_Types_Player.defaultPlayer.moved,
                        oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                        playerType: Egg_Types_Player.defaultPlayer.playerType,
                        stop: Egg_Types_Player.defaultPlayer.stop
                    };
                    return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "coords";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "currentFrame";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "direction";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "falling";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "id";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "lastAction";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "moved";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "oldDirection";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "playerType";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "stop";
                    }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "fallSpeed";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "flying";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "frames";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "img";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "movePattern";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "moveSpeed";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "multiplier";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "title";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "type_";
                    }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord))))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                        return "stop";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "playerType";
                    }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                        return "type_";
                    }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                        return "title";
                    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                        return "multiplier";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "moveSpeed";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "movePattern";
                    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                        return "img";
                    }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                        return "frames";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "flying";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "fallSpeed";
                    }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                        return "oldDirection";
                    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                        return "moved";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "lastAction";
                    }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                        return "id";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "falling";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "direction";
                    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                        return "currentFrame";
                    }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                        return "coords";
                    }))(Egg_Types_Coord.eqCoord))))(Egg_Logic_Collisions.removeCollided([  ])([ firstPlayer, secondPlayer ]))([ firstPlayer, secondPlayer ]);
                })()))(function () {
                    return Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Removes subjects of collision")((function () {
                        var firstPlayer = {
                            id: 1,
                            coords: Egg_Types_Coord.createFullCoord(6)(5)(-40 | 0)(0),
                            currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                            direction: Egg_Types_Player.defaultPlayer.direction,
                            falling: Egg_Types_Player.defaultPlayer.falling,
                            lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                            moved: Egg_Types_Player.defaultPlayer.moved,
                            oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                            playerType: Egg_Types_Player.defaultPlayer.playerType,
                            stop: Egg_Types_Player.defaultPlayer.stop
                        };
                        var secondPlayer = {
                            id: 2,
                            coords: Egg_Types_Coord.createFullCoord(5)(5)(0)(0),
                            currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                            direction: Egg_Types_Player.defaultPlayer.direction,
                            falling: Egg_Types_Player.defaultPlayer.falling,
                            lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                            moved: Egg_Types_Player.defaultPlayer.moved,
                            oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                            playerType: Egg_Types_Player.defaultPlayer.playerType,
                            stop: Egg_Types_Player.defaultPlayer.stop
                        };
                        return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "coords";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "currentFrame";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "direction";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "falling";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "id";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "lastAction";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "moved";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "oldDirection";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "playerType";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "stop";
                        }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "fallSpeed";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "flying";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "frames";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "img";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "movePattern";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "moveSpeed";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "multiplier";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "title";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "type_";
                        }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord))))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                            return "stop";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "playerType";
                        }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                            return "type_";
                        }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                            return "title";
                        }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                            return "multiplier";
                        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                            return "moveSpeed";
                        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                            return "movePattern";
                        }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                            return "img";
                        }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                            return "frames";
                        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                            return "flying";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "fallSpeed";
                        }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                            return "oldDirection";
                        }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                            return "moved";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "lastAction";
                        }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                            return "id";
                        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                            return "falling";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "direction";
                        }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                            return "currentFrame";
                        }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                            return "coords";
                        }))(Egg_Types_Coord.eqCoord))))(Egg_Logic_Collisions.removeCollided([ new Data_Tuple.Tuple(firstPlayer, secondPlayer) ])([ firstPlayer, secondPlayer ]))([  ]);
                    })());
                });
            })))(function () {
                return Test_Spec.describe(Data_Identity.monadIdentity)("combinePlayers")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Creates a new player")((function () {
                    var firstPlayer = createTestPlayer(1)(Egg_Types_Coord.createCoord(100)(100))(Egg_Types_PlayerType.Egg.value);
                    var secondPlayer = createTestPlayer(2)(Egg_Types_Coord.createCoord(6)(6))(Egg_Types_PlayerType.Egg.value);
                    var expected = createTestPlayer(1)(Egg_Types_Coord.createCoord(100)(100))(Egg_Types_PlayerType.RedEgg.value);
                    return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "coords";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "currentFrame";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "direction";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "falling";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "id";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "lastAction";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "moved";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "oldDirection";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "playerType";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "stop";
                    }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "fallSpeed";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "flying";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "frames";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "img";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "movePattern";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "moveSpeed";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "multiplier";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "title";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "type_";
                    }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord))))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                        return "stop";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "playerType";
                    }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                        return "type_";
                    }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                        return "title";
                    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                        return "multiplier";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "moveSpeed";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "movePattern";
                    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                        return "img";
                    }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                        return "frames";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "flying";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "fallSpeed";
                    }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                        return "oldDirection";
                    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                        return "moved";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "lastAction";
                    }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                        return "id";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "falling";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "direction";
                    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                        return "currentFrame";
                    }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                        return "coords";
                    }))(Egg_Types_Coord.eqCoord))))(Egg_Logic_Collisions.combinePlayers(new Data_Tuple.Tuple(firstPlayer, secondPlayer)))([ expected ]);
                })()))(function () {
                    return Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Returns players as no new one found")((function () {
                        var firstPlayer = createTestPlayer(1)(Egg_Types_Coord.createCoord(100)(100))(Egg_Types_PlayerType.YellowEgg.value);
                        var secondPlayer = createTestPlayer(2)(Egg_Types_Coord.createCoord(6)(6))(Egg_Types_PlayerType.YellowEgg.value);
                        return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "coords";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "currentFrame";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "direction";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "falling";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "id";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "lastAction";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "moved";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "oldDirection";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "playerType";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "stop";
                        }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "fallSpeed";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "flying";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "frames";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "img";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "movePattern";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "moveSpeed";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "multiplier";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "title";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "type_";
                        }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord))))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                            return "stop";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "playerType";
                        }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                            return "type_";
                        }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                            return "title";
                        }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                            return "multiplier";
                        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                            return "moveSpeed";
                        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                            return "movePattern";
                        }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                            return "img";
                        }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                            return "frames";
                        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                            return "flying";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "fallSpeed";
                        }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                            return "oldDirection";
                        }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                            return "moved";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "lastAction";
                        }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                            return "id";
                        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                            return "falling";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "direction";
                        }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                            return "currentFrame";
                        }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                            return "coords";
                        }))(Egg_Types_Coord.eqCoord))))(Egg_Logic_Collisions.combinePlayers(new Data_Tuple.Tuple(firstPlayer, secondPlayer)))([ firstPlayer, secondPlayer ]);
                    })());
                }));
            });
        });
    });
}));
module.exports = {
    createTestPlayer: createTestPlayer,
    tests: tests
};
