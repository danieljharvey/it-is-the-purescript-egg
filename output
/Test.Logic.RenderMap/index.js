// Generated by purs version 0.13.5
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Egg_Logic_RenderMap = require("../Egg.Logic.RenderMap/index.js");
var Egg_Types_Board = require("../Egg.Types.Board/index.js");
var Egg_Types_Coord = require("../Egg.Types.Coord/index.js");
var Egg_Types_CurrentFrame = require("../Egg.Types.CurrentFrame/index.js");
var Egg_Types_GameState = require("../Egg.Types.GameState/index.js");
var Egg_Types_LastAction = require("../Egg.Types.LastAction/index.js");
var Egg_Types_Player = require("../Egg.Types.Player/index.js");
var Egg_Types_PlayerType = require("../Egg.Types.PlayerType/index.js");
var Egg_Types_ResourceUrl = require("../Egg.Types.ResourceUrl/index.js");
var Matrix = require("../Matrix/index.js");
var Test_Spec = require("../Test.Spec/index.js");
var Test_Spec_Assertions = require("../Test.Spec.Assertions/index.js");
var testBoard = Egg_Types_Board.emptyBoard(3);
var tests = Test_Spec.describe(Data_Identity.monadIdentity)("RenderMap")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Render all after rotate")((function () {
    var gameState = Egg_Types_GameState.createGameState(testBoard);
    var rotated = {
        rotateAngle: 90,
        board: gameState.board,
        current: gameState.current,
        outcome: gameState.outcome,
        players: gameState.players,
        renderAngle: gameState.renderAngle,
        rotations: gameState.rotations,
        score: gameState.score,
        screenSize: gameState.screenSize,
        turns: gameState.turns
    };
    return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showBoolean))(Matrix.eqMatrix(Data_Eq.eqBoolean))(Egg_Logic_RenderMap.gameStatesToRenderMap(gameState)(rotated))(Egg_Logic_RenderMap.fillWholeBoard(true)(testBoard));
})()))(function () {
    return Test_Spec.describe(Data_Identity.monadIdentity)("addEdgePlayers")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Duplicate on left")((function () {
        var player = {
            coords: Egg_Types_Coord.createFullCoord(0)(0)(-30 | 0)(0),
            currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
            direction: Egg_Types_Player.defaultPlayer.direction,
            falling: Egg_Types_Player.defaultPlayer.falling,
            id: Egg_Types_Player.defaultPlayer.id,
            lastAction: Egg_Types_Player.defaultPlayer.lastAction,
            moved: Egg_Types_Player.defaultPlayer.moved,
            oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
            playerType: Egg_Types_Player.defaultPlayer.playerType,
            stop: Egg_Types_Player.defaultPlayer.stop
        };
        var second = {
            coords: Egg_Types_Coord.createFullCoord(3)(0)(-30 | 0)(0),
            currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
            direction: Egg_Types_Player.defaultPlayer.direction,
            falling: Egg_Types_Player.defaultPlayer.falling,
            id: Egg_Types_Player.defaultPlayer.id,
            lastAction: Egg_Types_Player.defaultPlayer.lastAction,
            moved: Egg_Types_Player.defaultPlayer.moved,
            oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
            playerType: Egg_Types_Player.defaultPlayer.playerType,
            stop: Egg_Types_Player.defaultPlayer.stop
        };
        return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "coords";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "currentFrame";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "direction";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "falling";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "id";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "lastAction";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "moved";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "oldDirection";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "playerType";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "stop";
        }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "fallSpeed";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "flying";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "frames";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "img";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "movePattern";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "moveSpeed";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "multiplier";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "title";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "type_";
        }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord))))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
            return "stop";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "playerType";
        }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
            return "type_";
        }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
            return "title";
        }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
            return "multiplier";
        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
            return "moveSpeed";
        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
            return "movePattern";
        }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
            return "img";
        }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
            return "frames";
        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
            return "flying";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "fallSpeed";
        }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
            return "oldDirection";
        }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
            return "moved";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "lastAction";
        }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
            return "id";
        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
            return "falling";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "direction";
        }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
            return "currentFrame";
        }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
            return "coords";
        }))(Egg_Types_Coord.eqCoord))))(Egg_Logic_RenderMap.addEdgePlayers(testBoard)([ player ]))([ player, second ]);
    })()))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Duplicate on right")((function () {
            var player = {
                coords: Egg_Types_Coord.createFullCoord(3)(0)(30)(0),
                currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                direction: Egg_Types_Player.defaultPlayer.direction,
                falling: Egg_Types_Player.defaultPlayer.falling,
                id: Egg_Types_Player.defaultPlayer.id,
                lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                moved: Egg_Types_Player.defaultPlayer.moved,
                oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                playerType: Egg_Types_Player.defaultPlayer.playerType,
                stop: Egg_Types_Player.defaultPlayer.stop
            };
            var second = {
                coords: Egg_Types_Coord.createFullCoord(0)(0)(30)(0),
                currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                direction: Egg_Types_Player.defaultPlayer.direction,
                falling: Egg_Types_Player.defaultPlayer.falling,
                id: Egg_Types_Player.defaultPlayer.id,
                lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                moved: Egg_Types_Player.defaultPlayer.moved,
                oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                playerType: Egg_Types_Player.defaultPlayer.playerType,
                stop: Egg_Types_Player.defaultPlayer.stop
            };
            return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "coords";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "currentFrame";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "direction";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "falling";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "lastAction";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "moved";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "oldDirection";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "playerType";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "stop";
            }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "fallSpeed";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "flying";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "frames";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "movePattern";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "moveSpeed";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "multiplier";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "type_";
            }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord))))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "stop";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "playerType";
            }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "type_";
            }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "multiplier";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "moveSpeed";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "movePattern";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                return "frames";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "flying";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "fallSpeed";
            }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                return "oldDirection";
            }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                return "moved";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "lastAction";
            }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "falling";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "direction";
            }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                return "currentFrame";
            }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                return "coords";
            }))(Egg_Types_Coord.eqCoord))))(Egg_Logic_RenderMap.addEdgePlayers(testBoard)([ player ]))([ player, second ]);
        })()))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Duplicate on top")((function () {
                var player = {
                    coords: Egg_Types_Coord.createFullCoord(0)(0)(0)(-30 | 0),
                    currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                    direction: Egg_Types_Player.defaultPlayer.direction,
                    falling: Egg_Types_Player.defaultPlayer.falling,
                    id: Egg_Types_Player.defaultPlayer.id,
                    lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                    moved: Egg_Types_Player.defaultPlayer.moved,
                    oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                    playerType: Egg_Types_Player.defaultPlayer.playerType,
                    stop: Egg_Types_Player.defaultPlayer.stop
                };
                var second = {
                    coords: Egg_Types_Coord.createFullCoord(0)(3)(0)(-30 | 0),
                    currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                    direction: Egg_Types_Player.defaultPlayer.direction,
                    falling: Egg_Types_Player.defaultPlayer.falling,
                    id: Egg_Types_Player.defaultPlayer.id,
                    lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                    moved: Egg_Types_Player.defaultPlayer.moved,
                    oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                    playerType: Egg_Types_Player.defaultPlayer.playerType,
                    stop: Egg_Types_Player.defaultPlayer.stop
                };
                return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "coords";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "currentFrame";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "direction";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "falling";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "lastAction";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "moved";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "oldDirection";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "playerType";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "stop";
                }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "fallSpeed";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "flying";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "frames";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "img";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "movePattern";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "moveSpeed";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "multiplier";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "title";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "type_";
                }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord))))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                    return "stop";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "playerType";
                }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                    return "type_";
                }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                    return "title";
                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                    return "multiplier";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "moveSpeed";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "movePattern";
                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                    return "img";
                }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                    return "frames";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "flying";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "fallSpeed";
                }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                    return "oldDirection";
                }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                    return "moved";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "lastAction";
                }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "falling";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "direction";
                }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                    return "currentFrame";
                }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                    return "coords";
                }))(Egg_Types_Coord.eqCoord))))(Egg_Logic_RenderMap.addEdgePlayers(testBoard)([ player ]))([ player, second ]);
            })()))(function () {
                return Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Duplicate on bottom")((function () {
                    var player = {
                        coords: Egg_Types_Coord.createFullCoord(0)(3)(0)(30),
                        currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                        direction: Egg_Types_Player.defaultPlayer.direction,
                        falling: Egg_Types_Player.defaultPlayer.falling,
                        id: Egg_Types_Player.defaultPlayer.id,
                        lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                        moved: Egg_Types_Player.defaultPlayer.moved,
                        oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                        playerType: Egg_Types_Player.defaultPlayer.playerType,
                        stop: Egg_Types_Player.defaultPlayer.stop
                    };
                    var second = {
                        coords: Egg_Types_Coord.createFullCoord(0)(0)(0)(30),
                        currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                        direction: Egg_Types_Player.defaultPlayer.direction,
                        falling: Egg_Types_Player.defaultPlayer.falling,
                        id: Egg_Types_Player.defaultPlayer.id,
                        lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                        moved: Egg_Types_Player.defaultPlayer.moved,
                        oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                        playerType: Egg_Types_Player.defaultPlayer.playerType,
                        stop: Egg_Types_Player.defaultPlayer.stop
                    };
                    return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "coords";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "currentFrame";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "direction";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "falling";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "id";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "lastAction";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "moved";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "oldDirection";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "playerType";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "stop";
                    }))(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "fallSpeed";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "flying";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "frames";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "img";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "movePattern";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "moveSpeed";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "multiplier";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "title";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "type_";
                    }))(Data_Show.showRecordFieldsNil)(Egg_Types_PlayerType.showPlayerKind))(Data_Show.showString))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showInt))))(Egg_Types_Coord.showCoord))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_LastAction.showLastAction)))(Data_Show.showInt))(Data_Show.showBoolean))(Egg_Types_Coord.showCoord))(Egg_Types_CurrentFrame.showCurrentFrame))(Egg_Types_Coord.showCoord))))(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                        return "stop";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "playerType";
                    }))(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                        return "type_";
                    }))(Egg_Types_PlayerType.eqPlayerKind))()(new Data_Symbol.IsSymbol(function () {
                        return "title";
                    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                        return "multiplier";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "moveSpeed";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "movePattern";
                    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                        return "img";
                    }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                        return "frames";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "flying";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "fallSpeed";
                    }))(Data_Eq.eqInt))))()(new Data_Symbol.IsSymbol(function () {
                        return "oldDirection";
                    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                        return "moved";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "lastAction";
                    }))(Data_Maybe.eqMaybe(Egg_Types_LastAction.eqLastAction)))()(new Data_Symbol.IsSymbol(function () {
                        return "id";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "falling";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "direction";
                    }))(Egg_Types_Coord.eqCoord))()(new Data_Symbol.IsSymbol(function () {
                        return "currentFrame";
                    }))(Egg_Types_CurrentFrame.eqCurrentFrame))()(new Data_Symbol.IsSymbol(function () {
                        return "coords";
                    }))(Egg_Types_Coord.eqCoord))))(Egg_Logic_RenderMap.addEdgePlayers(testBoard)([ player ]))([ player, second ]);
                })());
            });
        });
    }));
}));
module.exports = {
    testBoard: testBoard,
    tests: tests
};
