// Generated by purs version 0.13.5
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Split = (function () {
    function Split() {

    };
    Split.value = new Split();
    return Split;
})();
var Teleported = (function () {
    function Teleported() {

    };
    Teleported.value = new Teleported();
    return Teleported;
})();
var showLastAction = new Data_Show.Show(function (v) {
    if (v instanceof Split) {
        return "Split";
    };
    if (v instanceof Teleported) {
        return "Teleported";
    };
    throw new Error("Failed pattern match at Egg.Types.LastAction (line 15, column 1 - line 17, column 33): " + [ v.constructor.name ]);
});
var eqLastAction = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Split && y instanceof Split) {
            return true;
        };
        if (x instanceof Teleported && y instanceof Teleported) {
            return true;
        };
        return false;
    };
});
var ordLastAction = new Data_Ord.Ord(function () {
    return eqLastAction;
}, function (x) {
    return function (y) {
        if (x instanceof Split && y instanceof Split) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Split) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Split) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Teleported && y instanceof Teleported) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Egg.Types.LastAction (line 13, column 1 - line 13, column 48): " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    Split: Split,
    Teleported: Teleported,
    eqLastAction: eqLastAction,
    ordLastAction: ordLastAction,
    showLastAction: showLastAction
};
