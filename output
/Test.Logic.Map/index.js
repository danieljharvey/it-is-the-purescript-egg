// Generated by purs version 0.13.5
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Egg_Data_TileSet = require("../Egg.Data.TileSet/index.js");
var Egg_Logic_Board = require("../Egg.Logic.Board/index.js");
var Egg_Logic_Map = require("../Egg.Logic.Map/index.js");
var Egg_Types_Clockwise = require("../Egg.Types.Clockwise/index.js");
var Egg_Types_Coord = require("../Egg.Types.Coord/index.js");
var Egg_Types_PlayerType = require("../Egg.Types.PlayerType/index.js");
var Egg_Types_RenderAngle = require("../Egg.Types.RenderAngle/index.js");
var Egg_Types_ResourceUrl = require("../Egg.Types.ResourceUrl/index.js");
var Egg_Types_Tile = require("../Egg.Types.Tile/index.js");
var Egg_Types_TileAction = require("../Egg.Types.TileAction/index.js");
var Matrix = require("../Matrix/index.js");
var Test_Spec = require("../Test.Spec/index.js");
var Test_Spec_Assertions = require("../Test.Spec.Assertions/index.js");
var tryChangeAngle = function (item) {
    return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Egg_Types_RenderAngle.showRenderAngle)(Egg_Types_RenderAngle.eqRenderAngle)(Egg_Logic_Map.changeRenderAngle(item["in"])(item.clockwise))(item.out);
};
var boardSize = {
    width: 10,
    height: 10
};
var tryRotate = function (item) {
    return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Egg_Types_Coord.showCoord)(Egg_Types_Coord.eqCoord)(Egg_Logic_Map.translateRotation(boardSize)(item["in"])(item.clockwise))(item.out);
};
var tests = Test_Spec.describe(Data_Identity.monadIdentity)("Map")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.describe(Data_Identity.monadIdentity)("translateRotation")(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Does nothing if player not centered on board in X axis")(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableArray)(tryRotate)([ {
    "in": Egg_Types_Coord.createCoord(0)(0),
    clockwise: Egg_Types_Clockwise.Clockwise.value,
    out: Egg_Types_Coord.createCoord(9)(0)
}, {
    "in": Egg_Types_Coord.createCoord(9)(0),
    clockwise: Egg_Types_Clockwise.Clockwise.value,
    out: Egg_Types_Coord.createCoord(9)(9)
}, {
    "in": Egg_Types_Coord.createCoord(9)(9),
    clockwise: Egg_Types_Clockwise.Clockwise.value,
    out: Egg_Types_Coord.createCoord(0)(9)
}, {
    "in": Egg_Types_Coord.createCoord(0)(9),
    clockwise: Egg_Types_Clockwise.Clockwise.value,
    out: Egg_Types_Coord.createCoord(0)(0)
}, {
    "in": Egg_Types_Coord.createCoord(0)(0),
    clockwise: Egg_Types_Clockwise.AntiClockwise.value,
    out: Egg_Types_Coord.createCoord(0)(9)
}, {
    "in": Egg_Types_Coord.createCoord(0)(9),
    clockwise: Egg_Types_Clockwise.AntiClockwise.value,
    out: Egg_Types_Coord.createCoord(9)(9)
}, {
    "in": Egg_Types_Coord.createCoord(9)(9),
    clockwise: Egg_Types_Clockwise.AntiClockwise.value,
    out: Egg_Types_Coord.createCoord(9)(0)
}, {
    "in": Egg_Types_Coord.createCoord(9)(0),
    clockwise: Egg_Types_Clockwise.AntiClockwise.value,
    out: Egg_Types_Coord.createCoord(0)(0)
} ]))))(function () {
    return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.describe(Data_Identity.monadIdentity)("getNewPlayerDirection")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Doesn't get new player direction on rotate")((function () {
        var direction = Egg_Types_Coord.createCoord(1)(0);
        return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Egg_Types_Coord.showCoord)(Egg_Types_Coord.eqCoord)(Egg_Logic_Map.getNewPlayerDirection(direction)(Egg_Types_Clockwise.Clockwise.value))(direction);
    })()))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Do get new player direction on clockwise rotate")((function () {
            var direction = Egg_Types_Coord.createCoord(0)(0);
            var expected = Egg_Types_Coord.createCoord(1)(0);
            return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Egg_Types_Coord.showCoord)(Egg_Types_Coord.eqCoord)(Egg_Logic_Map.getNewPlayerDirection(direction)(Egg_Types_Clockwise.Clockwise.value))(expected);
        })()))(function () {
            return Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Do get new player direction on anti-clockwise rotate")((function () {
                var direction = Egg_Types_Coord.createCoord(0)(0);
                var expected = Egg_Types_Coord.createCoord(-1 | 0)(0);
                return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Egg_Types_Coord.showCoord)(Egg_Types_Coord.eqCoord)(Egg_Logic_Map.getNewPlayerDirection(direction)(Egg_Types_Clockwise.AntiClockwise.value))(expected);
            })());
        });
    })))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.describe(Data_Identity.monadIdentity)("rotateBoard")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Rotates clockwise correctly")((function () {
            var oldBoard = Egg_Logic_Board.boardFromArray([ [ Egg_Types_Tile.defaultTile, Egg_Types_Tile.defaultTile, Egg_Types_Tile.defaultTile ], [ Egg_Types_Tile.defaultTile, Egg_Types_Tile.emptyTile, Egg_Types_Tile.emptyTile ], [ Egg_Types_Tile.defaultTile, Egg_Types_Tile.emptyTile, Egg_Types_Tile.emptyTile ] ]);
            var expected = Egg_Logic_Board.boardFromArray([ [ Egg_Types_Tile.defaultTile, Egg_Types_Tile.defaultTile, Egg_Types_Tile.defaultTile ], [ Egg_Types_Tile.emptyTile, Egg_Types_Tile.emptyTile, Egg_Types_Tile.defaultTile ], [ Egg_Types_Tile.emptyTile, Egg_Types_Tile.emptyTile, Egg_Types_Tile.defaultTile ] ]);
            return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "action";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "background";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "breakable";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "createPlayer";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "dontAdd";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "drawMe";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "frontLayer";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "frontLayer";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "drawMe";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "dontAdd";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "createPlayer";
            }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                return "breakable";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "background";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "action";
            }))(Egg_Types_TileAction.eqTileAction))))(Egg_Logic_Map.rotateBoard(Egg_Types_Clockwise.Clockwise.value)(oldBoard))(expected);
        })()))(function () {
            return Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Rotates anticlockwise correctly")((function () {
                var oldBoard = Egg_Logic_Board.boardFromArray([ [ Egg_Types_Tile.defaultTile, Egg_Types_Tile.defaultTile, Egg_Types_Tile.defaultTile ], [ Egg_Types_Tile.emptyTile, Egg_Types_Tile.emptyTile, Egg_Types_Tile.defaultTile ], [ Egg_Types_Tile.emptyTile, Egg_Types_Tile.emptyTile, Egg_Types_Tile.defaultTile ] ]);
                var expected = Egg_Logic_Board.boardFromArray([ [ Egg_Types_Tile.defaultTile, Egg_Types_Tile.defaultTile, Egg_Types_Tile.defaultTile ], [ Egg_Types_Tile.defaultTile, Egg_Types_Tile.emptyTile, Egg_Types_Tile.emptyTile ], [ Egg_Types_Tile.defaultTile, Egg_Types_Tile.emptyTile, Egg_Types_Tile.emptyTile ] ]);
                return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "action";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "background";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "breakable";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "createPlayer";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "dontAdd";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "drawMe";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "frontLayer";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "img";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "title";
                }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                    return "title";
                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                    return "img";
                }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "frontLayer";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "drawMe";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "dontAdd";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "createPlayer";
                }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                    return "breakable";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "background";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "action";
                }))(Egg_Types_TileAction.eqTileAction))))(Egg_Logic_Map.rotateBoard(Egg_Types_Clockwise.AntiClockwise.value)(oldBoard))(expected);
            })());
        })))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.describe(Data_Identity.monadIdentity)("changeRenderAngle")(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Rotates correctly")(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableArray)(tryChangeAngle)([ {
                "in": 0,
                clockwise: Egg_Types_Clockwise.Clockwise.value,
                out: 90
            }, {
                "in": 90,
                clockwise: Egg_Types_Clockwise.Clockwise.value,
                out: 180
            }, {
                "in": 180,
                clockwise: Egg_Types_Clockwise.Clockwise.value,
                out: 270
            }, {
                "in": 270,
                clockwise: Egg_Types_Clockwise.Clockwise.value,
                out: 0
            }, {
                "in": 0,
                clockwise: Egg_Types_Clockwise.AntiClockwise.value,
                out: 270
            }, {
                "in": 90,
                clockwise: Egg_Types_Clockwise.AntiClockwise.value,
                out: 0
            }, {
                "in": 180,
                clockwise: Egg_Types_Clockwise.AntiClockwise.value,
                out: 90
            }, {
                "in": 270,
                clockwise: Egg_Types_Clockwise.AntiClockwise.value,
                out: 180
            } ]))))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.describe(Data_Identity.monadIdentity)("rotateOffset")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Rotates anticlockwise")(Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Egg_Types_Coord.showCoord)(Egg_Types_Coord.eqCoord)(Egg_Logic_Map.rotateOffset(Egg_Types_Clockwise.AntiClockwise.value)(Egg_Types_Coord.createFullCoord(0)(0)(-10 | 0)(-5 | 0)))(Egg_Types_Coord.createFullCoord(0)(0)(-5 | 0)(10))))(function () {
                    return Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Rotates clockwise")(Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Egg_Types_Coord.showCoord)(Egg_Types_Coord.eqCoord)(Egg_Logic_Map.rotateOffset(Egg_Types_Clockwise.Clockwise.value)(Egg_Types_Coord.createFullCoord(0)(0)(10)(5)))(Egg_Types_Coord.createFullCoord(0)(0)(-5 | 0)(10)));
                })))(function () {
                    return Test_Spec.describe(Data_Identity.monadIdentity)("switchTiles")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Ignores irrelevant tiles")((function () {
                        var board = Egg_Logic_Board.boardFromArray([ [ Egg_Types_Tile.emptyTile ] ]);
                        return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "action";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "background";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "breakable";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "createPlayer";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "dontAdd";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "drawMe";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "frontLayer";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "id";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "img";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "title";
                        }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                            return "title";
                        }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                            return "img";
                        }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                            return "id";
                        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                            return "frontLayer";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "drawMe";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "dontAdd";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "createPlayer";
                        }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                            return "breakable";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "background";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "action";
                        }))(Egg_Types_TileAction.eqTileAction))))(Egg_Logic_Map.switchTiles(9)(10)(board))(board);
                    })()))(function () {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Switches one tile")((function () {
                            var board = Egg_Logic_Board.boardFromArray([ [ Egg_Types_Tile.emptyTile, Egg_Types_Tile.defaultTile, Egg_Types_Tile.emptyTile ] ]);
                            var newTile = Data_Maybe.fromMaybe(Egg_Types_Tile.emptyTile)(Data_Map_Internal.lookup(Data_Ord.ordInt)(2)(Egg_Data_TileSet.tiles));
                            return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "action";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "background";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "breakable";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "createPlayer";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "dontAdd";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "drawMe";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "frontLayer";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "id";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "img";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "title";
                            }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                                return "title";
                            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                                return "img";
                            }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                                return "id";
                            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                                return "frontLayer";
                            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                return "drawMe";
                            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                return "dontAdd";
                            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                return "createPlayer";
                            }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                                return "breakable";
                            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                return "background";
                            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                return "action";
                            }))(Egg_Types_TileAction.eqTileAction))))(Egg_Logic_Map.switchTiles(Egg_Types_Tile.defaultTile.id)(2)(board))(Egg_Logic_Board.boardFromArray([ [ Egg_Types_Tile.emptyTile, newTile, Egg_Types_Tile.emptyTile ] ]));
                        })()))(function () {
                            return Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Switches two tiles")((function () {
                                var firstTile = Data_Maybe.fromMaybe(Egg_Types_Tile.emptyTile)(Data_Map_Internal.lookup(Data_Ord.ordInt)(3)(Egg_Data_TileSet.tiles));
                                var secondTile = Data_Maybe.fromMaybe(Egg_Types_Tile.emptyTile)(Data_Map_Internal.lookup(Data_Ord.ordInt)(5)(Egg_Data_TileSet.tiles));
                                var board = Egg_Logic_Board.boardFromArray([ [ firstTile, secondTile ] ]);
                                return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "action";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "background";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "breakable";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "createPlayer";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "dontAdd";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "drawMe";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "frontLayer";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "id";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "img";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "title";
                                }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                                    return "title";
                                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                                    return "img";
                                }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                                    return "id";
                                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                                    return "frontLayer";
                                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                    return "drawMe";
                                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                    return "dontAdd";
                                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                    return "createPlayer";
                                }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                                    return "breakable";
                                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                    return "background";
                                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                    return "action";
                                }))(Egg_Types_TileAction.eqTileAction))))(Egg_Logic_Map.switchTiles(firstTile.id)(secondTile.id)(board))(Egg_Logic_Board.boardFromArray([ [ secondTile, firstTile ] ]));
                            })());
                        });
                    }));
                });
            });
        });
    });
}));
module.exports = {
    boardSize: boardSize,
    tryRotate: tryRotate,
    tryChangeAngle: tryChangeAngle,
    tests: tests
};
