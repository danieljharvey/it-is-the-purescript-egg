// Generated by purs version 0.13.5
"use strict";
var $foreign = require("./foreign.js");
var Affjax_RequestBody = require("../Affjax.RequestBody/index.js");
var Affjax_RequestHeader = require("../Affjax.RequestHeader/index.js");
var Affjax_ResponseFormat = require("../Affjax.ResponseFormat/index.js");
var Affjax_ResponseHeader = require("../Affjax.ResponseHeader/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except = require("../Control.Monad.Except/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Parallel = require("../Control.Parallel/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Parser = require("../Data.Argonaut.Parser/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_FormURLEncoded = require("../Data.FormURLEncoded/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HTTP_Method = require("../Data.HTTP.Method/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Time_Duration = require("../Data.Time.Duration/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_Compat = require("../Effect.Aff.Compat/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Foreign = require("../Foreign/index.js");
var $$Math = require("../Math/index.js");
var retry = function (policy) {
    return function (run) {
        return function (req) {
            var retryState = function (v) {
                if (v instanceof Data_Either.Left) {
                    return Data_Either.Left.create(new Data_Either.Left(v.value0));
                };
                if (v instanceof Data_Either.Right) {
                    if (v.value0.status === 200) {
                        return new Data_Either.Right(v.value0);
                    };
                    var $29 = policy.shouldRetryWithStatusCode(v.value0.status);
                    if ($29) {
                        return Data_Either.Left.create(new Data_Either.Right(v.value0));
                    };
                    return new Data_Either.Right(v.value0);
                };
                throw new Error("Failed pattern match at Affjax (line 206, column 5 - line 208, column 39): " + [ v.constructor.name ]);
            };
            var go = function (failureRef) {
                return function (n) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Data_Functor.map(Effect_Aff.functorAff)(retryState)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(run(req))))(function (v) {
                        if (v instanceof Data_Either.Left) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(v.value0))(failureRef)))(function () {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(policy.delayCurve(n)))(function () {
                                    return go(failureRef)(n + 1 | 0);
                                });
                            });
                        };
                        if (v instanceof Data_Either.Right) {
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value0);
                        };
                        throw new Error("Failed pattern match at Affjax (line 221, column 7 - line 226, column 32): " + [ v.constructor.name ]);
                    });
                };
            };
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (v) {
                var loop = go(v);
                if (policy.timeout instanceof Data_Maybe.Nothing) {
                    return loop(1);
                };
                if (policy.timeout instanceof Data_Maybe.Just) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Control_Parallel.parOneOf(Effect_Aff.parallelAff)(Effect_Aff.alternativeParAff)(Data_Foldable.foldableArray)(Data_Functor.functorArray)([ Data_Functor.map(Effect_Aff.functorAff)(Data_Maybe.Just.create)(loop(1)), Data_Functor.voidRight(Effect_Aff.functorAff)(Data_Maybe.Nothing.value)(Effect_Aff.delay(policy.timeout.value0)) ]))(function (v1) {
                        if (v1 instanceof Data_Maybe.Nothing) {
                            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v)))(function (v2) {
                                if (v2 instanceof Data_Maybe.Nothing) {
                                    return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Timeout"));
                                };
                                if (v2 instanceof Data_Maybe.Just) {
                                    return Data_Either.either(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff))(Control_Applicative.pure(Effect_Aff.applicativeAff))(v2.value0);
                                };
                                throw new Error("Failed pattern match at Affjax (line 201, column 11 - line 203, column 61): " + [ v2.constructor.name ]);
                            });
                        };
                        if (v1 instanceof Data_Maybe.Just) {
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value0);
                        };
                        throw new Error("Failed pattern match at Affjax (line 198, column 7 - line 204, column 31): " + [ v1.constructor.name ]);
                    });
                };
                throw new Error("Failed pattern match at Affjax (line 194, column 3 - line 204, column 31): " + [ policy.timeout.constructor.name ]);
            });
        };
    };
};
var request = function (req) {
    var parseJSON = function (v) {
        if (v === "") {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Argonaut_Core.jsonEmptyObject);
        };
        return Data_Either.either(function ($66) {
            return Foreign.fail(Foreign.ForeignError.create($66));
        })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(Data_Argonaut_Parser.jsonParser(v));
    };
    var fromResponse$prime = (function () {
        if (req.responseFormat instanceof Affjax_ResponseFormat["ArrayBuffer"]) {
            return Foreign.unsafeReadTagged("ArrayBuffer");
        };
        if (req.responseFormat instanceof Affjax_ResponseFormat.Blob) {
            return Foreign.unsafeReadTagged("Blob");
        };
        if (req.responseFormat instanceof Affjax_ResponseFormat.Document) {
            return Foreign.unsafeReadTagged("Document");
        };
        if (req.responseFormat instanceof Affjax_ResponseFormat.Json) {
            return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(function ($67) {
                return req.responseFormat.value0(parseJSON($67));
            })(Foreign.unsafeReadTagged("String"));
        };
        if (req.responseFormat instanceof Affjax_ResponseFormat["String"]) {
            return Foreign.unsafeReadTagged("String");
        };
        if (req.responseFormat instanceof Affjax_ResponseFormat.Ignore) {
            return Data_Function["const"](req.responseFormat.value0(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit)));
        };
        throw new Error("Failed pattern match at Affjax (line 294, column 19 - line 300, column 57): " + [ req.responseFormat.constructor.name ]);
    })();
    var extractContent = function (v) {
        if (v instanceof Affjax_RequestBody.ArrayView) {
            return v.value0(Foreign.unsafeToForeign);
        };
        if (v instanceof Affjax_RequestBody.Blob) {
            return Foreign.unsafeToForeign(v.value0);
        };
        if (v instanceof Affjax_RequestBody.Document) {
            return Foreign.unsafeToForeign(v.value0);
        };
        if (v instanceof Affjax_RequestBody["String"]) {
            return Foreign.unsafeToForeign(v.value0);
        };
        if (v instanceof Affjax_RequestBody.FormData) {
            return Foreign.unsafeToForeign(v.value0);
        };
        if (v instanceof Affjax_RequestBody.FormURLEncoded) {
            return Foreign.unsafeToForeign(Data_FormURLEncoded.encode(v.value0));
        };
        if (v instanceof Affjax_RequestBody.Json) {
            return Foreign.unsafeToForeign(Data_Argonaut_Core.stringify(v.value0));
        };
        throw new Error("Failed pattern match at Affjax (line 268, column 20 - line 275, column 57): " + [ v.constructor.name ]);
    };
    var addHeader = function (mh) {
        return function (hs) {
            if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Affjax_RequestHeader.name)(mh.value0))(hs)) {
                return Data_Array.snoc(hs)(mh.value0);
            };
            return hs;
        };
    };
    var headers = function (reqContent) {
        return addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.ContentType.create)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Affjax_RequestBody.toMediaType)(reqContent)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.Accept.create)(Affjax_ResponseFormat.toMediaType(req.responseFormat)))(req.headers));
    };
    var req$prime = {
        method: Data_HTTP_Method.print(req.method),
        url: req.url,
        headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
            return {
                field: Affjax_RequestHeader.name(h),
                value: Affjax_RequestHeader.value(h)
            };
        })(headers(req.content)),
        content: Data_Nullable.toNullable(Data_Functor.map(Data_Maybe.functorMaybe)(extractContent)(req.content)),
        responseType: Affjax_ResponseFormat.toResponseType(req.responseFormat),
        username: Data_Nullable.toNullable(req.username),
        password: Data_Nullable.toNullable(req.password),
        withCredentials: req.withCredentials
    };
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_Compat.fromEffectFnAff($foreign["_ajax"](Affjax_ResponseHeader.ResponseHeader.create, req$prime)))(function (v) {
        var v1 = Control_Monad_Except.runExcept(fromResponse$prime(v.body));
        if (v1 instanceof Data_Either.Left) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)({
                body: new Data_Either.Left(new Affjax_ResponseFormat.ResponseFormatError(Data_List_NonEmpty.head(v1.value0), v.body)),
                headers: v.headers,
                status: v.status,
                statusText: v.statusText
            });
        };
        if (v1 instanceof Data_Either.Right) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)({
                body: new Data_Either.Right(v1.value0),
                headers: v.headers,
                status: v.status,
                statusText: v.statusText
            });
        };
        throw new Error("Failed pattern match at Affjax (line 248, column 3 - line 252, column 39): " + [ v1.constructor.name ]);
    });
};
var defaultRetryPolicy = {
    timeout: Data_Maybe.Nothing.value,
    delayCurve: function (n) {
        return Data_Time_Duration.Milliseconds(Data_Ord.max(Data_Ord.ordNumber)(30.0 * 1000.0)(100.0 * $$Math.pow(2.0)(Data_Int.toNumber(n - 1 | 0))));
    },
    shouldRetryWithStatusCode: Data_Function["const"](false)
};
var defaultRequest = {
    method: new Data_Either.Left(Data_HTTP_Method.GET.value),
    url: "/",
    headers: [  ],
    content: Data_Maybe.Nothing.value,
    username: Data_Maybe.Nothing.value,
    password: Data_Maybe.Nothing.value,
    withCredentials: false,
    responseFormat: Affjax_ResponseFormat.ignore
};
var $$delete = function (rf) {
    return function (u) {
        return request({
            method: new Data_Either.Left(Data_HTTP_Method.DELETE.value),
            url: u,
            headers: defaultRequest.headers,
            content: defaultRequest.content,
            username: defaultRequest.username,
            password: defaultRequest.password,
            withCredentials: defaultRequest.withCredentials,
            responseFormat: rf
        });
    };
};
var delete_ = (function () {
    var $68 = Data_Functor.map(Effect_Aff.functorAff)(function (v) {
        return {
            body: Data_Unit.unit,
            headers: v.headers,
            status: v.status,
            statusText: v.statusText
        };
    });
    var $69 = $$delete(Affjax_ResponseFormat.ignore);
    return function ($70) {
        return $68($69($70));
    };
})();
var get = function (rf) {
    return function (u) {
        return request({
            method: defaultRequest.method,
            url: u,
            headers: defaultRequest.headers,
            content: defaultRequest.content,
            username: defaultRequest.username,
            password: defaultRequest.password,
            withCredentials: defaultRequest.withCredentials,
            responseFormat: rf
        });
    };
};
var patch = function (rf) {
    return function (u) {
        return function (c) {
            return request({
                method: new Data_Either.Left(Data_HTTP_Method.PATCH.value),
                url: u,
                headers: defaultRequest.headers,
                content: new Data_Maybe.Just(c),
                username: defaultRequest.username,
                password: defaultRequest.password,
                withCredentials: defaultRequest.withCredentials,
                responseFormat: rf
            });
        };
    };
};
var patch_ = function (url) {
    var $71 = Data_Functor.map(Effect_Aff.functorAff)(function (v) {
        return {
            body: Data_Unit.unit,
            headers: v.headers,
            status: v.status,
            statusText: v.statusText
        };
    });
    var $72 = patch(Affjax_ResponseFormat.ignore)(url);
    return function ($73) {
        return $71($72($73));
    };
};
var patch$prime = function (rf) {
    return function (u) {
        return function (c) {
            return request({
                method: new Data_Either.Left(Data_HTTP_Method.PATCH.value),
                url: u,
                headers: defaultRequest.headers,
                content: c,
                username: defaultRequest.username,
                password: defaultRequest.password,
                withCredentials: defaultRequest.withCredentials,
                responseFormat: rf
            });
        };
    };
};
var patch_$prime = function (url) {
    var $74 = Data_Functor.map(Effect_Aff.functorAff)(function (v) {
        return {
            body: Data_Unit.unit,
            headers: v.headers,
            status: v.status,
            statusText: v.statusText
        };
    });
    var $75 = patch$prime(Affjax_ResponseFormat.ignore)(url);
    return function ($76) {
        return $74($75($76));
    };
};
var post = function (rf) {
    return function (u) {
        return function (c) {
            return request({
                method: new Data_Either.Left(Data_HTTP_Method.POST.value),
                url: u,
                headers: defaultRequest.headers,
                content: new Data_Maybe.Just(c),
                username: defaultRequest.username,
                password: defaultRequest.password,
                withCredentials: defaultRequest.withCredentials,
                responseFormat: rf
            });
        };
    };
};
var post_ = function (url) {
    var $77 = Data_Functor.map(Effect_Aff.functorAff)(function (v) {
        return {
            body: Data_Unit.unit,
            headers: v.headers,
            status: v.status,
            statusText: v.statusText
        };
    });
    var $78 = post(Affjax_ResponseFormat.ignore)(url);
    return function ($79) {
        return $77($78($79));
    };
};
var post$prime = function (rf) {
    return function (u) {
        return function (c) {
            return request({
                method: new Data_Either.Left(Data_HTTP_Method.POST.value),
                url: u,
                headers: defaultRequest.headers,
                content: c,
                username: defaultRequest.username,
                password: defaultRequest.password,
                withCredentials: defaultRequest.withCredentials,
                responseFormat: rf
            });
        };
    };
};
var post_$prime = function (url) {
    var $80 = Data_Functor.map(Effect_Aff.functorAff)(function (v) {
        return {
            body: Data_Unit.unit,
            headers: v.headers,
            status: v.status,
            statusText: v.statusText
        };
    });
    var $81 = post$prime(Affjax_ResponseFormat.ignore)(url);
    return function ($82) {
        return $80($81($82));
    };
};
var put = function (rf) {
    return function (u) {
        return function (c) {
            return request({
                method: new Data_Either.Left(Data_HTTP_Method.PUT.value),
                url: u,
                headers: defaultRequest.headers,
                content: new Data_Maybe.Just(c),
                username: defaultRequest.username,
                password: defaultRequest.password,
                withCredentials: defaultRequest.withCredentials,
                responseFormat: rf
            });
        };
    };
};
var put_ = function (url) {
    var $83 = Data_Functor.map(Effect_Aff.functorAff)(function (v) {
        return {
            body: Data_Unit.unit,
            headers: v.headers,
            status: v.status,
            statusText: v.statusText
        };
    });
    var $84 = put(Affjax_ResponseFormat.ignore)(url);
    return function ($85) {
        return $83($84($85));
    };
};
var put$prime = function (rf) {
    return function (u) {
        return function (c) {
            return request({
                method: new Data_Either.Left(Data_HTTP_Method.PUT.value),
                url: u,
                headers: defaultRequest.headers,
                content: c,
                username: defaultRequest.username,
                password: defaultRequest.password,
                withCredentials: defaultRequest.withCredentials,
                responseFormat: rf
            });
        };
    };
};
var put_$prime = function (url) {
    var $86 = Data_Functor.map(Effect_Aff.functorAff)(function (v) {
        return {
            body: Data_Unit.unit,
            headers: v.headers,
            status: v.status,
            statusText: v.statusText
        };
    });
    var $87 = put$prime(Affjax_ResponseFormat.ignore)(url);
    return function ($88) {
        return $86($87($88));
    };
};
module.exports = {
    defaultRequest: defaultRequest,
    request: request,
    get: get,
    post: post,
    post_: post_,
    "post'": post$prime,
    "post_'": post_$prime,
    put: put,
    put_: put_,
    "put'": put$prime,
    "put_'": put_$prime,
    "delete": $$delete,
    delete_: delete_,
    patch: patch,
    patch_: patch_,
    "patch'": patch$prime,
    "patch_'": patch_$prime,
    defaultRetryPolicy: defaultRetryPolicy,
    retry: retry
};
