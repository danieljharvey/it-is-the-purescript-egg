// Generated by purs version 0.13.5
"use strict";
var Effect_AVar = require("../Effect.AVar/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var tryTake = (function () {
    var $6 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
    return function ($7) {
        return $6(Effect_AVar.tryTake($7));
    };
})();
var tryRead = (function () {
    var $8 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
    return function ($9) {
        return $8(Effect_AVar.tryRead($9));
    };
})();
var tryPut = function (value) {
    var $10 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
    var $11 = Effect_AVar.tryPut(value);
    return function ($12) {
        return $10($11($12));
    };
};
var take = function (avar) {
    return Effect_Aff.makeAff(function (k) {
        return function __do() {
            var v = Effect_AVar.take(avar)(k)();
            return Effect_Aff.effectCanceler(v);
        };
    });
};
var status = (function () {
    var $13 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
    return function ($14) {
        return $13(Effect_AVar.status($14));
    };
})();
var read = function (avar) {
    return Effect_Aff.makeAff(function (k) {
        return function __do() {
            var v = Effect_AVar.read(avar)(k)();
            return Effect_Aff.effectCanceler(v);
        };
    });
};
var put = function (value) {
    return function (avar) {
        return Effect_Aff.makeAff(function (k) {
            return function __do() {
                var v = Effect_AVar.put(value)(avar)(k)();
                return Effect_Aff.effectCanceler(v);
            };
        });
    };
};
var $$new = (function () {
    var $15 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
    return function ($16) {
        return $15(Effect_AVar["new"]($16));
    };
})();
var kill = function (error) {
    var $17 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
    var $18 = Effect_AVar.kill(error);
    return function ($19) {
        return $17($18($19));
    };
};
var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
module.exports = {
    "new": $$new,
    empty: empty,
    status: status,
    take: take,
    tryTake: tryTake,
    put: put,
    tryPut: tryPut,
    read: read,
    tryRead: tryRead,
    kill: kill
};
