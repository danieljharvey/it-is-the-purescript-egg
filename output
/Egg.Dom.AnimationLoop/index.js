// Generated by purs version 0.13.5
"use strict";
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Time = require("../Data.Time/index.js");
var Data_Time_Duration = require("../Data.Time.Duration/index.js");
var Effect_Now = require("../Effect.Now/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Web_HTML = require("../Web.HTML/index.js");
var Web_HTML_Window = require("../Web.HTML.Window/index.js");
var millisecondsToInt = function (v) {
    return Data_Int.floor(v);
};
var difference = function (old) {
    return function ($$new) {
        var myDiff = Data_Time.diff(Data_Time_Duration.durationMilliseconds)($$new)(old);
        return millisecondsToInt(Data_Time_Duration.fromDuration(Data_Time_Duration.durationMilliseconds)(myDiff));
    };
};
var duration = function (ref) {
    return function (callback) {
        return function __do() {
            var v = Effect_Now.nowTime();
            var v1 = Effect_Ref.read(ref)();
            Effect_Ref.write(v)(ref)();
            var change = difference(v1)(v);
            return callback(change)();
        };
    };
};
var createBlankState = function (initial) {
    return function __do() {
        var v = Effect_Now.nowTime();
        var v1 = Effect_Ref["new"](v)();
        var v2 = Effect_Ref["new"](initial)();
        var v3 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
        return {
            time: v1,
            gameState: v2,
            inputEvent: v3
        };
    };
};
var animationLoop = function (refs) {
    return function (gameLoop) {
        return function (listener) {
            return function (completedCallback) {
                return function __do() {
                    var v = Web_HTML.window();
                    var callback = function (c) {
                        return function __do() {
                            var v1 = Effect_Ref.read(refs.inputEvent)();
                            var v2 = Effect_Ref.read(refs.gameState)();
                            var newGameState = gameLoop(c)(v1)(v2);
                            if (newGameState instanceof Data_Maybe.Just) {
                                Effect_Ref.write(newGameState.value0)(refs.gameState)();
                                var v3 = Web_HTML_Window.requestAnimationFrame(duration(refs.time)(callback))(v)();
                                listener(v2)(newGameState.value0)();
                                return Effect_Ref.write(Data_Maybe.Nothing.value)(refs.inputEvent)();
                            };
                            if (newGameState instanceof Data_Maybe.Nothing) {
                                return completedCallback();
                            };
                            throw new Error("Failed pattern match at Egg.Dom.AnimationLoop (line 53, column 7 - line 61, column 37): " + [ newGameState.constructor.name ]);
                        };
                    };
                    return callback(0)();
                };
            };
        };
    };
};
module.exports = {
    createBlankState: createBlankState,
    animationLoop: animationLoop,
    duration: duration,
    millisecondsToInt: millisecondsToInt,
    difference: difference
};
