// Generated by purs version 0.13.5
"use strict";
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Egg_Types_PlayerType = require("../Egg.Types.PlayerType/index.js");
var Egg_Types_ResourceUrl = require("../Egg.Types.ResourceUrl/index.js");
var Egg_Types_Tile = require("../Egg.Types.Tile/index.js");
var Egg_Types_TileAction = require("../Egg.Types.TileAction/index.js");
var tiles = Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple(1, Egg_Types_Tile.emptyTile), new Data_Tuple.Tuple(2, {
    background: false,
    id: 2,
    img: new Egg_Types_ResourceUrl.TileResource("fabric"),
    title: "Fabric",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer
}), new Data_Tuple.Tuple(3, {
    background: true,
    action: new Egg_Types_TileAction.Collectable(1),
    frontLayer: true,
    id: 3,
    img: new Egg_Types_ResourceUrl.TileResource("cacti"),
    title: "Cacti",
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(4, {
    background: true,
    action: new Egg_Types_TileAction.Collectable(10),
    frontLayer: true,
    id: 4,
    img: new Egg_Types_ResourceUrl.TileResource("plant"),
    title: "Plant",
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(5, {
    background: false,
    breakable: true,
    id: 5,
    img: new Egg_Types_ResourceUrl.TileResource("crate"),
    title: "Crate",
    action: Egg_Types_Tile.defaultTile.action,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer
}), new Data_Tuple.Tuple(8, {
    background: false,
    id: 8,
    img: new Egg_Types_ResourceUrl.TileResource("work-surface-2"),
    title: "Work surface 2",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer
}), new Data_Tuple.Tuple(9, {
    background: false,
    id: 9,
    img: new Egg_Types_ResourceUrl.TileResource("work-surface-3"),
    title: "Work surface 3",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer
}), new Data_Tuple.Tuple(10, {
    background: false,
    id: 10,
    img: new Egg_Types_ResourceUrl.TileResource("work-surface-4"),
    title: "Work surface 4",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer
}), new Data_Tuple.Tuple(11, {
    background: false,
    id: 11,
    img: new Egg_Types_ResourceUrl.TileResource("tile"),
    title: "Tiles",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer
}), new Data_Tuple.Tuple(12, {
    action: Egg_Types_TileAction.CompleteLevel.value,
    background: true,
    createPlayer: new Data_Maybe.Just(Egg_Types_PlayerType.Egg.value),
    frontLayer: true,
    id: 12,
    img: new Egg_Types_ResourceUrl.TileResource("egg-cup"),
    title: "Egg Cup",
    breakable: Egg_Types_Tile.defaultTile.breakable,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(13, {
    background: true,
    action: new Egg_Types_TileAction.Collectable(100),
    dontAdd: true,
    frontLayer: true,
    id: 13,
    img: new Egg_Types_ResourceUrl.TileResource("toast"),
    title: "Toast",
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(14, {
    action: Egg_Types_TileAction.Teleport.value,
    background: true,
    frontLayer: true,
    id: 14,
    img: new Egg_Types_ResourceUrl.TileResource("door"),
    title: "Door",
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(15, {
    background: true,
    frontLayer: true,
    id: 15,
    img: new Egg_Types_ResourceUrl.TileResource("pink-door-open"),
    title: "Pink door open",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(16, {
    background: false,
    id: 16,
    img: new Egg_Types_ResourceUrl.TileResource("pink-door"),
    title: "Pink door closed",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer
}), new Data_Tuple.Tuple(17, {
    action: new Egg_Types_TileAction.Switch(Egg_Types_TileAction.Pink.value),
    background: true,
    frontLayer: true,
    id: 17,
    img: new Egg_Types_ResourceUrl.TileResource("pink-switch"),
    title: "Pink door switch",
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(18, {
    background: true,
    frontLayer: true,
    id: 18,
    img: new Egg_Types_ResourceUrl.TileResource("green-door-open"),
    title: "Green door open",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(19, {
    background: false,
    id: 19,
    img: new Egg_Types_ResourceUrl.TileResource("green-door"),
    title: "Green door closed",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer
}), new Data_Tuple.Tuple(20, {
    action: new Egg_Types_TileAction.Switch(Egg_Types_TileAction.Green.value),
    background: true,
    frontLayer: true,
    id: 20,
    img: new Egg_Types_ResourceUrl.TileResource("green-switch"),
    title: "Green door switch",
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(21, {
    background: true,
    createPlayer: new Data_Maybe.Just(Egg_Types_PlayerType.SilverEgg.value),
    frontLayer: true,
    id: 21,
    img: new Egg_Types_ResourceUrl.TileResource("silver-egg-cup"),
    title: "Silver Egg Cup",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(22, {
    background: true,
    createPlayer: new Data_Maybe.Just(Egg_Types_PlayerType.Blade.value),
    frontLayer: true,
    id: 22,
    img: new Egg_Types_ResourceUrl.TileResource("blade-egg-cup"),
    title: "Blade egg cup",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(23, {
    background: true,
    createPlayer: new Data_Maybe.Just(Egg_Types_PlayerType.FindBlade.value),
    frontLayer: true,
    id: 23,
    img: new Egg_Types_ResourceUrl.TileResource("find-blade-egg-cup"),
    title: "Find-blade egg cup",
    action: Egg_Types_Tile.defaultTile.action,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}), new Data_Tuple.Tuple(24, {
    background: true,
    id: 24,
    action: Egg_Types_TileAction.SplitEggs.value,
    frontLayer: true,
    img: new Egg_Types_ResourceUrl.TileResource("egg-splitter"),
    title: "It is the egg splitter",
    breakable: Egg_Types_Tile.defaultTile.breakable,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    drawMe: Egg_Types_Tile.defaultTile.drawMe
}) ]);
var tileResources = Data_Functor.map(Data_List_Types.functorList)(function (v) {
    return v.img;
})(Data_Map_Internal.values(tiles));
module.exports = {
    tiles: tiles,
    tileResources: tileResources
};
