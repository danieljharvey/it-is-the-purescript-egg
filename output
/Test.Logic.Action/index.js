// Generated by purs version 0.13.5
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Egg_Data_TileSet = require("../Egg.Data.TileSet/index.js");
var Egg_Logic_Action = require("../Egg.Logic.Action/index.js");
var Egg_Logic_Board = require("../Egg.Logic.Board/index.js");
var Egg_Types_Coord = require("../Egg.Types.Coord/index.js");
var Egg_Types_Outcome = require("../Egg.Types.Outcome/index.js");
var Egg_Types_Player = require("../Egg.Types.Player/index.js");
var Egg_Types_PlayerType = require("../Egg.Types.PlayerType/index.js");
var Egg_Types_ResourceUrl = require("../Egg.Types.ResourceUrl/index.js");
var Egg_Types_Score = require("../Egg.Types.Score/index.js");
var Egg_Types_Tile = require("../Egg.Types.Tile/index.js");
var Egg_Types_TileAction = require("../Egg.Types.TileAction/index.js");
var Matrix = require("../Matrix/index.js");
var Test_Spec = require("../Test.Spec/index.js");
var Test_Spec_Assertions = require("../Test.Spec.Assertions/index.js");
var pinkSwitchTile = {
    id: Egg_Types_Tile.defaultTile.id,
    title: Egg_Types_Tile.defaultTile.title,
    img: Egg_Types_Tile.defaultTile.img,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    background: Egg_Types_Tile.defaultTile.background,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    action: new Egg_Types_TileAction.Switch(Egg_Types_TileAction.Pink.value),
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer
};
var pinkBlockTile = Data_Maybe.fromMaybe(Egg_Types_Tile.emptyTile)(Data_Map_Internal.lookup(Data_Ord.ordInt)(15)(Egg_Data_TileSet.tiles));
var pinkSwitchBoard = Egg_Logic_Board.boardFromArray([ [ pinkSwitchTile, pinkBlockTile ] ]);
var emptyBoard = Egg_Logic_Board.boardFromArray([ [ Egg_Types_Tile.emptyTile ], [ Egg_Types_Tile.emptyTile ] ]);
var crateTile = {
    id: Egg_Types_Tile.defaultTile.id,
    title: Egg_Types_Tile.defaultTile.title,
    img: Egg_Types_Tile.defaultTile.img,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    background: Egg_Types_Tile.defaultTile.background,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer,
    breakable: true,
    action: Egg_Types_Tile.defaultTile.action,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer
};
var smashableBoard = Egg_Logic_Board.boardFromArray([ [ Egg_Types_Tile.emptyTile ], [ crateTile ] ]);
var completeLevel = {
    id: Egg_Types_Tile.defaultTile.id,
    title: Egg_Types_Tile.defaultTile.title,
    img: Egg_Types_Tile.defaultTile.img,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    background: Egg_Types_Tile.defaultTile.background,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    action: Egg_Types_TileAction.CompleteLevel.value,
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer
};
var completeBoard = Egg_Logic_Board.boardFromArray([ [ completeLevel ] ]);
var collectable = {
    id: Egg_Types_Tile.defaultTile.id,
    title: Egg_Types_Tile.defaultTile.title,
    img: Egg_Types_Tile.defaultTile.img,
    drawMe: Egg_Types_Tile.defaultTile.drawMe,
    background: Egg_Types_Tile.defaultTile.background,
    frontLayer: Egg_Types_Tile.defaultTile.frontLayer,
    breakable: Egg_Types_Tile.defaultTile.breakable,
    action: new Egg_Types_TileAction.Collectable(100),
    dontAdd: Egg_Types_Tile.defaultTile.dontAdd,
    createPlayer: Egg_Types_Tile.defaultTile.createPlayer
};
var collectableBoard = Egg_Logic_Board.boardFromArray([ [ collectable ] ]);
var boardContainsId = function (i) {
    return function (board) {
        return Data_Foldable.foldr(Matrix.foldableMatrix)(function (tile) {
            return function (total) {
                return total || tile.id === i;
            };
        })(false)(board);
    };
};
var tests = Test_Spec.describe(Data_Identity.monadIdentity)("Action")(Test_Spec.describe(Data_Identity.monadIdentity)("checkPlayerTileAction")(Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Does nothing if player not centered on board in X axis")((function () {
    var player = {
        coords: Egg_Types_Coord.createFullCoord(0)(0)(1)(0),
        currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
        direction: Egg_Types_Player.defaultPlayer.direction,
        falling: Egg_Types_Player.defaultPlayer.falling,
        id: Egg_Types_Player.defaultPlayer.id,
        lastAction: Egg_Types_Player.defaultPlayer.lastAction,
        moved: Egg_Types_Player.defaultPlayer.moved,
        oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
        playerType: Egg_Types_Player.defaultPlayer.playerType,
        stop: Egg_Types_Player.defaultPlayer.stop
    };
    var after = Egg_Logic_Action.checkPlayerTileAction(player)(collectableBoard)(0)(Egg_Types_Outcome.KeepPlaying.value);
    return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "action";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "background";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "breakable";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "createPlayer";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "dontAdd";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "drawMe";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "frontLayer";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "id";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "img";
    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
        return "title";
    }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
        return "title";
    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
        return "img";
    }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
        return "id";
    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
        return "frontLayer";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "drawMe";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "dontAdd";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "createPlayer";
    }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
        return "breakable";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "background";
    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
        return "action";
    }))(Egg_Types_TileAction.eqTileAction))))(after.board)(collectableBoard);
})()))(function () {
    return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Does nothing if player not centered on board in Y axis")((function () {
        var player = {
            coords: Egg_Types_Coord.createFullCoord(0)(0)(0)(1),
            currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
            direction: Egg_Types_Player.defaultPlayer.direction,
            falling: Egg_Types_Player.defaultPlayer.falling,
            id: Egg_Types_Player.defaultPlayer.id,
            lastAction: Egg_Types_Player.defaultPlayer.lastAction,
            moved: Egg_Types_Player.defaultPlayer.moved,
            oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
            playerType: Egg_Types_Player.defaultPlayer.playerType,
            stop: Egg_Types_Player.defaultPlayer.stop
        };
        var after = Egg_Logic_Action.checkPlayerTileAction(player)(collectableBoard)(0)(Egg_Types_Outcome.KeepPlaying.value);
        return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "action";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "background";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "breakable";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "createPlayer";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "dontAdd";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "drawMe";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "frontLayer";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "id";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "img";
        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
            return "title";
        }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
            return "title";
        }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
            return "img";
        }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
            return "id";
        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
            return "frontLayer";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "drawMe";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "dontAdd";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "createPlayer";
        }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
            return "breakable";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "background";
        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
            return "action";
        }))(Egg_Types_TileAction.eqTileAction))))(after.board)(collectableBoard);
    })()))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Does nothing if player has not moved")((function () {
            var player = {
                coords: Egg_Types_Coord.createFullCoord(0)(0)(0)(0),
                moved: false,
                currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                direction: Egg_Types_Player.defaultPlayer.direction,
                falling: Egg_Types_Player.defaultPlayer.falling,
                id: Egg_Types_Player.defaultPlayer.id,
                lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                playerType: Egg_Types_Player.defaultPlayer.playerType,
                stop: Egg_Types_Player.defaultPlayer.stop
            };
            var after = Egg_Logic_Action.checkPlayerTileAction(player)(collectableBoard)(0)(Egg_Types_Outcome.KeepPlaying.value);
            return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "action";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "background";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "breakable";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "createPlayer";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "dontAdd";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "drawMe";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "frontLayer";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                return "title";
            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                return "img";
            }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                return "id";
            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                return "frontLayer";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "drawMe";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "dontAdd";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "createPlayer";
            }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                return "breakable";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "background";
            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                return "action";
            }))(Egg_Types_TileAction.eqTileAction))))(after.board)(collectableBoard);
        })()))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Changes board and increments score if player has moved")((function () {
                var player = {
                    coords: Egg_Types_Coord.createFullCoord(0)(0)(0)(0),
                    moved: true,
                    currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                    direction: Egg_Types_Player.defaultPlayer.direction,
                    falling: Egg_Types_Player.defaultPlayer.falling,
                    id: Egg_Types_Player.defaultPlayer.id,
                    lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                    oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                    playerType: Egg_Types_Player.defaultPlayer.playerType,
                    stop: Egg_Types_Player.defaultPlayer.stop
                };
                var after = Egg_Logic_Action.checkPlayerTileAction(player)(collectableBoard)(0)(Egg_Types_Outcome.KeepPlaying.value);
                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Test_Spec_Assertions.shouldNotEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "action";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "background";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "breakable";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "createPlayer";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "dontAdd";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "drawMe";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "frontLayer";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "img";
                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "title";
                }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                    return "title";
                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                    return "img";
                }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                    return "frontLayer";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "drawMe";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "dontAdd";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "createPlayer";
                }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                    return "breakable";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "background";
                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                    return "action";
                }))(Egg_Types_TileAction.eqTileAction))))(after.board)(collectableBoard))(function () {
                    return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Egg_Types_Score.showScore)(Egg_Types_Score.eqScore)(after.score)(100);
                });
            })()))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Returns BackAtTheEggCup outcome")((function () {
                    var player = {
                        coords: Egg_Types_Coord.createCoord(0)(0),
                        moved: true,
                        currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                        direction: Egg_Types_Player.defaultPlayer.direction,
                        falling: Egg_Types_Player.defaultPlayer.falling,
                        id: Egg_Types_Player.defaultPlayer.id,
                        lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                        oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                        playerType: Egg_Types_Player.defaultPlayer.playerType,
                        stop: Egg_Types_Player.defaultPlayer.stop
                    };
                    var after = Egg_Logic_Action.checkPlayerTileAction(player)(completeBoard)(0)(Egg_Types_Outcome.KeepPlaying.value);
                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "action";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "background";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "breakable";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "createPlayer";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "dontAdd";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "drawMe";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "frontLayer";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "id";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "img";
                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "title";
                    }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                        return "title";
                    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                        return "img";
                    }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                        return "id";
                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                        return "frontLayer";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "drawMe";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "dontAdd";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "createPlayer";
                    }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                        return "breakable";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "background";
                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                        return "action";
                    }))(Egg_Types_TileAction.eqTileAction))))(after.board)(completeBoard))(function () {
                        return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Egg_Types_Outcome.showOutcome)(Egg_Types_Outcome.eqOutcome)(after.outcome)(Egg_Types_Outcome.BackAtTheEggCup.value);
                    });
                })()))(function () {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Triggers Pink switch")((function () {
                        var player = {
                            coords: Egg_Types_Coord.createCoord(0)(0),
                            moved: true,
                            currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                            direction: Egg_Types_Player.defaultPlayer.direction,
                            falling: Egg_Types_Player.defaultPlayer.falling,
                            id: Egg_Types_Player.defaultPlayer.id,
                            lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                            oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                            playerType: Egg_Types_Player.defaultPlayer.playerType,
                            stop: Egg_Types_Player.defaultPlayer.stop
                        };
                        var after = Egg_Logic_Action.checkPlayerTileAction(player)(pinkSwitchBoard)(0)(Egg_Types_Outcome.KeepPlaying.value);
                        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Test_Spec_Assertions.shouldNotEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "action";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "background";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "breakable";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "createPlayer";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "dontAdd";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "drawMe";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "frontLayer";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "id";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "img";
                        }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                            return "title";
                        }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                            return "title";
                        }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                            return "img";
                        }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                            return "id";
                        }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                            return "frontLayer";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "drawMe";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "dontAdd";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "createPlayer";
                        }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                            return "breakable";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "background";
                        }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                            return "action";
                        }))(Egg_Types_TileAction.eqTileAction))))(after.board)(pinkSwitchBoard))(function () {
                            return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Data_Show.showBoolean)(Data_Eq.eqBoolean)(boardContainsId(16)(after.board))(true);
                        });
                    })()))(function () {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Does nothing when player is not falling")((function () {
                            var player = {
                                coords: Egg_Types_Coord.createCoord(0)(0),
                                currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                                direction: Egg_Types_Player.defaultPlayer.direction,
                                falling: Egg_Types_Player.defaultPlayer.falling,
                                id: Egg_Types_Player.defaultPlayer.id,
                                lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                                moved: Egg_Types_Player.defaultPlayer.moved,
                                oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                                playerType: Egg_Types_Player.defaultPlayer.playerType,
                                stop: Egg_Types_Player.defaultPlayer.stop
                            };
                            var after = Egg_Logic_Action.checkTileBelowPlayer(smashableBoard)(player);
                            return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "action";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "background";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "breakable";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "createPlayer";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "dontAdd";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "drawMe";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "frontLayer";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "id";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "img";
                            }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                return "title";
                            }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                                return "title";
                            }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                                return "img";
                            }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                                return "id";
                            }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                                return "frontLayer";
                            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                return "drawMe";
                            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                return "dontAdd";
                            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                return "createPlayer";
                            }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                                return "breakable";
                            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                return "background";
                            }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                return "action";
                            }))(Egg_Types_TileAction.eqTileAction))))(after)(smashableBoard);
                        })()))(function () {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Test_Spec.bindSpecT(Data_Identity.bindIdentity))(Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Does nothing when tile below is not smashable")((function () {
                                var player = {
                                    coords: Egg_Types_Coord.createCoord(0)(0),
                                    falling: true,
                                    currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                                    direction: Egg_Types_Player.defaultPlayer.direction,
                                    id: Egg_Types_Player.defaultPlayer.id,
                                    lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                                    moved: Egg_Types_Player.defaultPlayer.moved,
                                    oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                                    playerType: Egg_Types_Player.defaultPlayer.playerType,
                                    stop: Egg_Types_Player.defaultPlayer.stop
                                };
                                var after = Egg_Logic_Action.checkTileBelowPlayer(emptyBoard)(player);
                                return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "action";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "background";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "breakable";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "createPlayer";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "dontAdd";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "drawMe";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "frontLayer";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "id";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "img";
                                }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                    return "title";
                                }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                                    return "title";
                                }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                                    return "img";
                                }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                                    return "id";
                                }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                                    return "frontLayer";
                                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                    return "drawMe";
                                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                    return "dontAdd";
                                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                    return "createPlayer";
                                }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                                    return "breakable";
                                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                    return "background";
                                }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                    return "action";
                                }))(Egg_Types_TileAction.eqTileAction))))(after)(emptyBoard);
                            })()))(function () {
                                return Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("Smashes the crate below")((function () {
                                    var player = {
                                        coords: Egg_Types_Coord.createCoord(0)(0),
                                        falling: true,
                                        currentFrame: Egg_Types_Player.defaultPlayer.currentFrame,
                                        direction: Egg_Types_Player.defaultPlayer.direction,
                                        id: Egg_Types_Player.defaultPlayer.id,
                                        lastAction: Egg_Types_Player.defaultPlayer.lastAction,
                                        moved: Egg_Types_Player.defaultPlayer.moved,
                                        oldDirection: Egg_Types_Player.defaultPlayer.oldDirection,
                                        playerType: Egg_Types_Player.defaultPlayer.playerType,
                                        stop: Egg_Types_Player.defaultPlayer.stop
                                    };
                                    var after = Egg_Logic_Action.checkTileBelowPlayer(smashableBoard)(player);
                                    return Test_Spec_Assertions.shouldEqual(Effect_Aff.monadThrowAff)(Matrix.showMatrix(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                        return "action";
                                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                        return "background";
                                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                        return "breakable";
                                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                        return "createPlayer";
                                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                        return "dontAdd";
                                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                        return "drawMe";
                                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                        return "frontLayer";
                                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                        return "id";
                                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                        return "img";
                                    }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                                        return "title";
                                    }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Egg_Types_ResourceUrl.showResourceUrl))(Data_Show.showInt))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Maybe.showMaybe(Egg_Types_PlayerType.showPlayerKind)))(Data_Show.showBoolean))(Data_Show.showBoolean))(Egg_Types_TileAction.showTileAction))))(Matrix.eqMatrix(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                                        return "title";
                                    }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                                        return "img";
                                    }))(Egg_Types_ResourceUrl.eqResourceUrl))()(new Data_Symbol.IsSymbol(function () {
                                        return "id";
                                    }))(Data_Eq.eqInt))()(new Data_Symbol.IsSymbol(function () {
                                        return "frontLayer";
                                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                        return "drawMe";
                                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                        return "dontAdd";
                                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                        return "createPlayer";
                                    }))(Data_Maybe.eqMaybe(Egg_Types_PlayerType.eqPlayerKind)))()(new Data_Symbol.IsSymbol(function () {
                                        return "breakable";
                                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                        return "background";
                                    }))(Data_Eq.eqBoolean))()(new Data_Symbol.IsSymbol(function () {
                                        return "action";
                                    }))(Egg_Types_TileAction.eqTileAction))))(after)(emptyBoard);
                                })());
                            });
                        });
                    });
                });
            });
        });
    });
})));
module.exports = {
    collectable: collectable,
    collectableBoard: collectableBoard,
    completeLevel: completeLevel,
    completeBoard: completeBoard,
    pinkSwitchTile: pinkSwitchTile,
    pinkBlockTile: pinkBlockTile,
    pinkSwitchBoard: pinkSwitchBoard,
    boardContainsId: boardContainsId,
    crateTile: crateTile,
    emptyBoard: emptyBoard,
    smashableBoard: smashableBoard,
    tests: tests
};
